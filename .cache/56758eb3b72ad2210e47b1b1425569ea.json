{"dependencies":[{"name":"nervjs"},{"name":"./Clock"},{"name":"./App.css"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _nervjs = require(\"nervjs\");\n\nvar _nervjs2 = _interopRequireDefault(_nervjs);\n\nvar _Clock = require(\"./Clock\");\n\nvar _Clock2 = _interopRequireDefault(_Clock);\n\nrequire(\"./App.css\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return _nervjs2.default.createElement(\n        \"div\",\n        { className: \"container\" },\n        this.zones.map(function (zone) {\n          return _nervjs2.default.createElement(_Clock2.default, { zone: zone });\n        })\n      );\n    }\n  }, {\n    key: \"zones\",\n    get: function get() {\n      return [{\n        title: 'Berlin',\n        GMT: 'CET'\n      }, {\n        title: 'San Francisco',\n        GMT: 'GMT-8'\n      }];\n    }\n  }]);\n\n  return App;\n}(_nervjs2.default.Component);\n\nexports.default = App;"},"hash":"002a627746a765665bd89caef189cdad"}